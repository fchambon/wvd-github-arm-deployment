name: Deploiement d'un environnement Windows Virtual Desktop
on: workflow_dispatch

env:
  #Variables plateforme 
  AZURE_RG: "RG-WVD-GH-00" # Nom du groupe de ressources
  AZURE_LOC: "northeurope" # Region Azure cible
  DEPLOYNAME: "Rollup-000" # Nom du déploiement

  #Variables Image Gold W10
  RG_IMAGES: "ADTSP-CI-PACKERIMAGE2-PROD" #Groupe de ressources contenant l'image construite via Packer
  IMAGE_WVD: "W10-EVD-20h2" #Nom de l'image Managed

  #Variables WVD
  HOSTPOOLS_NAME: "HP-CICD-01" #Nom du Hostpool

jobs:

  Test-Arm:
    runs-on: ubuntu-20.04
    name: Test-ARM
    

    steps:

      - name: Generation du Token Expiration Time
        shell: pwsh
        run: |
          $Expiration=$((get-date).ToUniversalTime().AddHours(2).ToString('yyyy-MM-ddTHH:mm:ss.fffffffZ'))
          echo "::set-output name=outexp::$($Expiration)"
        id: var_exp   

      - name: Test de la variable Token Expiration Time
        shell: pwsh
        run: |
          echo "Le jeton généré est: ${{ steps.var_exp.outputs.outexp }}"

      - name: Download Repo content
        uses: actions/checkout@v2

      - name: Azure authentication
        uses: Azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: RG PS Management
        uses: Azure/powershell@v1
        with:
          azPSVersion: latest
          inlineScript: |
            Get-AzResourceGroup -Name ${{ env.AZURE_RG }} -ErrorVariable notPresent -ErrorAction SilentlyContinue
            if ($notPresent)
            {
              New-AzResourceGroup -Name ${{ env.AZURE_RG }} -Location ${{ env.AZURE_LOC }}
            }

#      - name: Resource Group Management
#        uses: azure/CLI@1.0.4
#        with:
#          inlineScript: |
#            $rgExists = az group exists -n ${{ env.AZURE_RG }}
#            if ($rgExists -eq 'false') {
#            az group create --name ${{ env.AZURE_RG }} --location ${{ env.AZURE_LOC }}
#            }
